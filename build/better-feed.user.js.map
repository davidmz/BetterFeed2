{"version":3,"sources":["webpack:///better-feed.user.js","webpack:///webpack/bootstrap 4b9644e78014d2c69d79?42cb","webpack:///./src/js/user-js-loader.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","inject","version","e","document","createElement","src","type","charset","async","head","appendChild","verName","updName","now","Date","nextUpdate","localStorage","parseInt","isNaN","xhr","XMLHttpRequest","open","responseType","onload","tags","this","response","length","send"],"mappings":";;;;;;;;;CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GAEtB,YEXD,SAASQ,GAAOC,GACZ,GAAIC,GAAIC,SAASC,cAAc,SAC/BF,GAAEG,IAAM,8CAAgDJ,EAAU,4BAClEC,EAAEI,KAAO,kBACTJ,EAAEK,QAAU,QACZL,EAAEM,OAAQ,EACVL,SAASM,KAAKC,YAAYR,GAzC9B,GAAMS,GAAU,cACZC,EAAU,kBACVC,EAAMC,KAAKD,MAEXZ,EAAU,KACVc,EAAa,CAUjB,IARIJ,IAAWK,gBACXf,EAAUe,aAAaL,GACvBI,EAAaE,SAASD,aAAaJ,IAC/BM,MAAMH,KACNA,EAAa,IAIjBF,EAAME,EAAY,CAClBC,aAAaJ,GAAWC,EAAM,IAC9B,IAAIM,GAAM,GAAIC,eACdD,GAAIE,KAAK,MAAO,4EAChBF,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACT,GAAIC,GAAOC,KAAKC,QACG,IAAfF,EAAKG,QAAe,QAAUH,GAAK,KACnCR,aAAaL,GAAWa,EAAK,GAAL,KACxBR,aAAaJ,GAAWC,EAAM,MAEd,OAAZZ,GAAkBD,EAAOwB,EAAK,GAAL,QAGrCL,EAAIS,OAGQ,OAAZ3B,GAAkBD,EAAOC","file":"better-feed.user.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar verName = 'bf2-version',\n\t    updName = 'bf2-next-update',\n\t    now = Date.now();\n\t\n\tvar version = null,\n\t    nextUpdate = 0;\n\t\n\tif (verName in localStorage) {\n\t    version = localStorage[verName];\n\t    nextUpdate = parseInt(localStorage[updName]);\n\t    if (isNaN(nextUpdate)) {\n\t        nextUpdate = 0;\n\t    }\n\t}\n\t\n\tif (now > nextUpdate) {\n\t    localStorage[updName] = now + 3600 * 1000;\n\t    var xhr = new XMLHttpRequest();\n\t    xhr.open('GET', 'https://api.github.com/repos/davidmz/BetterFeed2/tags?page=1&&per_page=1');\n\t    xhr.responseType = \"json\";\n\t    xhr.onload = function () {\n\t        var tags = this.response;\n\t        if (tags.length == 1 && \"name\" in tags[0]) {\n\t            localStorage[verName] = tags[0][\"name\"];\n\t            localStorage[updName] = now + 24 * 3600 * 1000;\n\t            // первый запуск\n\t            if (version === null) inject(tags[0][\"name\"]);\n\t        }\n\t    };\n\t    xhr.send();\n\t}\n\t\n\tif (version !== null) inject(version);\n\t\n\tfunction inject(version) {\n\t    var e = document.createElement(\"script\");\n\t    e.src = 'https://cdn.rawgit.com/davidmz/BetterFeed2/' + version + '/build/better-feed.min.js';\n\t    e.type = \"text/javascript\";\n\t    e.charset = \"utf-8\";\n\t    e.async = true;\n\t    document.head.appendChild(e);\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** better-feed.user.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4b9644e78014d2c69d79\n **/","const verName = 'bf2-version',\r\n    updName = 'bf2-next-update',\r\n    now = Date.now();\r\n\r\nlet version = null,\r\n    nextUpdate = 0;\r\n\r\nif (verName in localStorage) {\r\n    version = localStorage[verName];\r\n    nextUpdate = parseInt(localStorage[updName]);\r\n    if (isNaN(nextUpdate)) {\r\n        nextUpdate = 0;\r\n    }\r\n}\r\n\r\nif (now > nextUpdate) {\r\n    localStorage[updName] = now + 3600 * 1000;\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', 'https://api.github.com/repos/davidmz/BetterFeed2/tags?page=1&&per_page=1');\r\n    xhr.responseType = \"json\";\r\n    xhr.onload = function () {\r\n        var tags = this.response;\r\n        if (tags.length == 1 && \"name\" in tags[0]) {\r\n            localStorage[verName] = tags[0][\"name\"];\r\n            localStorage[updName] = now + 24 * 3600 * 1000;\r\n            // первый запуск\r\n            if (version === null) inject(tags[0][\"name\"]);\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n\r\nif (version !== null) inject(version);\r\n\r\n\r\nfunction inject(version) {\r\n    var e = document.createElement(\"script\");\r\n    e.src = 'https://cdn.rawgit.com/davidmz/BetterFeed2/' + version + '/build/better-feed.min.js';\r\n    e.type = \"text/javascript\";\r\n    e.charset = \"utf-8\";\r\n    e.async = true;\r\n    document.head.appendChild(e);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/user-js-loader.js\n **/"],"sourceRoot":""}